<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxConfiguracion.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PA1eAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBoxConfiguracion.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PA1eAAAAAElFTkSuQmCC
</value>
  </data>
</root>